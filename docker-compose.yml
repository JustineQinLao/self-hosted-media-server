services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    network_mode: host
    environment:
      - NGINX_PORT=80
      - JELLYFIN_PORT=8096
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    command: /bin/sh -c "envsubst < /etc/nginx/conf.d/jellyfin.conf > /etc/nginx/conf.d/jellyfin.conf.tmp && mv /etc/nginx/conf.d/jellyfin.conf.tmp /etc/nginx/conf.d/jellyfin.conf && nginx -g 'daemon off;'"
    depends_on:
      jellyfin:
        condition: service_healthy
    restart: unless-stopped
    
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 1000:1000
    network_mode: host
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ./media:/media
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8096/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
    restart: unless-stopped
    networks:
      - media-network

networks:
  media-network:
    driver: bridge