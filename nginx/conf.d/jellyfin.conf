# Main HTTP server
server {
    listen ${NGINX_PORT};
    listen [::]:${NGINX_PORT};
    server_name _;  # This will match any domain

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Jellyfin
    location / {
        # Use the internal Docker DNS to resolve the Jellyfin container
        resolver 127.0.0.11 valid=30s;
        set $jellyfin_upstream http://jellyfin:${JELLYFIN_PORT};
        proxy_pass $jellyfin_upstream;
        proxy_pass_request_headers on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_redirect off;

        # Disable buffering when the nginx proxy gets very resource heavy
        proxy_buffering off;
        
        # Increase timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }

    # WebSocket support
    location /socket {
        proxy_pass http://jellyfin:${JELLYFIN_PORT}/socket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }

    # Media files
    location /videos/ {
        proxy_pass http://jellyfin:${JELLYFIN_PORT}/videos/;
        proxy_pass_request_headers on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }
}
