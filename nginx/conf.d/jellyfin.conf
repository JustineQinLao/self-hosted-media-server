# Main HTTP server
server {
    listen 80;
    listen [::]:80;
    server_name _;  # This will match any domain

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Jellyfin
    location / {
        # Use the internal Docker DNS to resolve the Jellyfin container
        resolver 127.0.0.11 valid=30s;
        set  http://jellyfin:8096;
        proxy_pass ;
        proxy_pass_request_headers on;
        proxy_set_header Host ;
        proxy_set_header X-Real-IP ;
        proxy_set_header X-Forwarded-For ;
        proxy_set_header X-Forwarded-Proto ;
        proxy_set_header X-Forwarded-Host ;
        proxy_set_header X-Forwarded-Server ;
        proxy_redirect off;

        # Disable buffering when the nginx proxy gets very resource heavy
        proxy_buffering off;
        
        # Increase timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }

    # WebSocket support
    location /socket {
        proxy_pass http://jellyfin:8096/socket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade ;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host ;
        proxy_set_header X-Real-IP ;
        proxy_set_header X-Forwarded-For ;
        proxy_set_header X-Forwarded-Proto ;
        proxy_set_header X-Forwarded-Host ;
    }

    # Media files
    location /videos/ {
        proxy_pass http://jellyfin:8096/videos/;
        proxy_pass_request_headers on;
        proxy_set_header Host ;
        proxy_set_header X-Real-IP ;
        proxy_set_header X-Forwarded-For ;
        proxy_set_header X-Forwarded-Proto ;
        proxy_set_header X-Forwarded-Host ;
    }
}
